package cn.sxt.QueueAndDeque;

/**
 * Queue：一端操作
 * 				单向（队列通常FIFO-先进先出；
 * 				优先级队列和堆栈LIFO-后进先出）
 * 				抛出异常：		插入add(e)-移除remove()-获取element()；		返回特殊值：插入offer(e)false-移除poll()null-获取peek()
 * 
 * Deque：两端操作（头―尾）
 * 				双向-两端访问
 * 				全名double-enfed queue，是一种具有队列和栈的性质的数据结构。
 * 				双端队列中的元素可以从两端弹出，其限定插入和删除操作在表两端进行。
 * 				第一个元素~			抛出异常：插入addFirst(e)-移除removeFirst()-获取getFirst()；		返回特殊值：插入offerFirst(e)-移除pollFirst()-获取peekFirst()
 * 				最后一个元素~		抛出异常：插入addLast(e)-移除removeLast()-获取getLast()；		返回特殊值：插入offerLast(e)-移除pollLast()-获取peekLast()
 * @author Admin
 *
 *
 *队列：单向和双向
 *			
 */
public class QueueAndDeque {
		
}
